ÍNDICE DEL PROGRAMA: HERENCIA ENTRE CLASES DE ACTORES

1. Definición de la clase base: Actor
   - Clase general que representa un actor en una historia.
   - Atributos:
     • personaje: Nombre del personaje interpretado.
     • papel: Rol del personaje en la historia (protagonista, antagonista, etc.).
   - Método:
     • decirDialogo(self): Método vacío (pass). Será sobrescrito por las clases hijas.

2. Definición de la subclase: Villano
   - Hereda de la clase Actor.
   - Método sobrescrito:
     • decirDialogo(self): Imprime un mensaje con el nombre del personaje y su papel como villano.

3. Definición de la subclase: Primario
   - También hereda de la clase Actor.
   - Método sobrescrito:
     • decirDialogo(self): Imprime un mensaje con el nombre del personaje y su papel como protagonista.

4. Creación de objetos
   - unRandom = Villano("Wiliam Afton", "antagonista")
     • Crea un personaje villano.
   - otroRandom = Primario("Crying children", "Protagonista")
     • Crea un personaje protagonista.

5. Ejecución de métodos
   - Se llaman los métodos decirDialogo() para cada objeto:
     • unRandom.decirDialogo()
     • otroRandom.decirDialogo()
   - Salida esperada:
     • "Hola soy Wiliam Afton y soy el antagonista de la historia"
     • "Hola soy Crying children y soy el Protagonista de la historia"

6. Observaciones
   - Se aplica correctamente el principio de herencia en programación orientada a objetos.
   - Cada subclase personaliza el comportamiento del método `decirDialogo`.
   - Se puede seguir ampliando con más tipos de personajes (por ejemplo: Secundario, Extra, etc.).
